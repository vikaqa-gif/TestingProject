{
	"info": {
		"_postman_id": "828591cf-fa93-42fd-821b-91549ec640e8",
		"name": "Petstore API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47991948",
		"_collection_link": "https://viktoria-jobv542-7794658.postman.co/workspace/new-workspace~2f9d987c-3bb4-48d4-9171-9cb306a49c69/collection/47991948-828591cf-fa93-42fd-821b-91549ec640e8?action=share&source=collection_link&creator=47991948"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Позитивные",
					"item": [
						{
							"name": "Основной сценарий - POST pet",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Статус код 200\", function () { pm.response.to.have.status(200); });",
											"var jsonData = pm.response.json();",
											"pm.test(\"Имя питомца совпадает\", function () { pm.expect(jsonData.name).to.eql(\"popugayKesha\"); });",
											"pm.environment.set(\"petId\", jsonData.id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 123456,\n  \"name\": \"popugayKesha\",\n  \"status\": \"available\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Альтернативный сценарий - pending",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 123457,\n  \"name\": \"popugayKesha\",\n  \"status\": \"pending\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET питомца по ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/{{petId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"{{petId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT питомца - изменить статус",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 123456,\n  \"name\": \"popugayKesha\",\n  \"status\": \"sold\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE питомца",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/{{petId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"{{petId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Негативные",
					"item": [
						{
							"name": "Без id (обязательное поле)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"popugayKesha\",\n  \"status\": \"available\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Без name (обязательное поле)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 999,\n  \"status\": \"available\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Невалидный id = -1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -1,\n  \"name\": \"popugayKesha\",\n  \"status\": \"available\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Невалидный id = abc",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"id\": \"abc\", \"name\": \"popugayKesha\", \"status\": \"available\" }"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Невалидный статус",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1000,\n  \"name\": \"popugayKesha\",\n  \"status\": \"notExist\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET несуществующего питомца",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"0"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT питомца - невалидный id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"id\": \"badId\", \"name\": \"popugayKesha\", \"status\": \"sold\" }"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE несуществующего питомца",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"0"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Граничные",
					"item": [
						{
							"name": "Min id = 1",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"name\": \"popugayKesha\",\n  \"status\": \"available\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						},
						{
							"name": "Max id = 9223372036854775807",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 9223372036854775807,\n  \"name\": \"popugayKesha\",\n  \"status\": \"available\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Позитивные",
					"item": [
						{
							"name": "Создать заказ (POST /store/order)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", function () {",
											"    pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"",
											"var data = pm.response.json();",
											"",
											"pm.environment.set(\"orderId\", data.id);",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 2001,\n  \"petId\": 123456,\n  \"quantity\": 2,\n  \"status\": \"placed\",\n  \"complete\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получить заказ (GET /store/order/{id})",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/{{orderId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										"{{orderId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получить инвентарь (GET /store/inventory)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));",
											"pm.test(\"Ответ в формате JSON\", () => {",
											"  const data = pm.response.json();",
											"  pm.expect(typeof data).to.eql(\"object\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"inventory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удалить заказ (DELETE /store/order/{id})",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/{{orderId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										"{{orderId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Негативные",
					"item": [
						{
							"name": "Получить заказ с id=abc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 404\", () => pm.response.to.have.status(404));"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/abc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получить несуществующий заказ (id=999999)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 404\", () => pm.response.to.have.status(404));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/999999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										"999999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать заказ с id=-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 400/500\", () => pm.expect([400,500]).to.include(pm.response.code));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -1,\n  \"petId\": 123,\n  \"quantity\": 1,\n  \"status\": \"placed\",\n  \"complete\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать заказ с невалидным статусом",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3002,\n  \"petId\": 123,\n  \"quantity\": 1,\n  \"status\": \"wrongStatus\",\n  \"complete\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удалить несуществующий заказ (id=999999)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 404\", () => pm.response.to.have.status(404));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/order/999999",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order",
										"999999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Граничные",
					"item": [
						{
							"name": "Создать заказ с id=0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 200 или 500\", () => pm.expect([200,500]).to.include(pm.response.code));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 0,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"status\": \"placed\",\n  \"complete\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать заказ с id=1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"status\": \"placed\",\n  \"complete\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать заказ с id=max long",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 200 или 500\", () => pm.expect([200,500]).to.include(pm.response.code));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 9223372036854775807,\n  \"petId\": 1,\n  \"quantity\": 1,\n  \"status\": \"placed\",\n  \"complete\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Позитивные",
					"item": [
						{
							"name": "Создать пользователя (POST /user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3001,\n  \"username\": \"testUser\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\",\n  \"phone\": \"1234567890\",\n  \"userStatus\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получить пользователя (GET /user/{username})",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", function () {",
											"    pm.expect(pm.response.code).to.eql(200);",
											"});",
											"",
											"var data = pm.response.json();",
											"",
											"pm.test(\"username совпадает\", function () {",
											"    pm.expect(data.username).to.eql(\"testUser\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/testUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"testUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновить пользователя (PUT /user/{username})",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3001,\n  \"username\": \"testUser\",\n  \"firstName\": \"Updated\",\n  \"lastName\": \"User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\",\n  \"phone\": \"1234567890\",\n  \"userStatus\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/testUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"testUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удалить пользователя (DELETE /user/{username})",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/testUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"testUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Логин (GET /user/login)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=testUser&password=123456",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "testUser"
										},
										{
											"key": "password",
											"value": "123456"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Логаут (GET /user/logout)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Статус код 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Негативные",
					"item": [
						{
							"name": "Создать пользователя без пароля",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 400/405\", () => pm.expect([400,405]).to.include(pm.response.code));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3002,\n  \"username\": \"badUser\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать пользователя без username",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3003,\n  \"password\": \"pwd\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получить несуществующего пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 404\", () => pm.response.to.have.status(404));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/notExist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"notExist"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удалить несуществующего пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 404\", () => pm.response.to.have.status(404));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/notExist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"notExist"
									]
								}
							},
							"response": []
						},
						{
							"name": "Логин с неверным паролем",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 400 или 401\", () => pm.expect([400,401]).to.include(pm.response.code));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=testUser&password=wrongPwd",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "testUser"
										},
										{
											"key": "password",
											"value": "wrongPwd"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Граничные",
					"item": [
						{
							"name": "Создать пользователя с username длиной 1 символ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 200\", () => pm.response.to.have.status(200));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3101,\n  \"username\": \"a\",\n  \"password\": \"pwd\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать пользователя с username со спецсимволами",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3103,\n  \"username\": \"!@#$%^&*()\",\n  \"password\": \"pwd\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создать пользователя с длинным username (256 символов)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ожидаем 200 или 500\", () => pm.expect([200,500]).to.include(pm.response.code));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3003,\n  \"username\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"firstName\": \"Boundary\",\n  \"lastName\": \"Case\",\n  \"email\": \"boundary@example.com\",\n  \"password\": \"pwd\",\n  \"phone\": \"000\",\n  \"userStatus\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}