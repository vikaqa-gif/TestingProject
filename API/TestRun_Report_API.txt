Отчёт о прогоне тестов — Petstore API

Инструменты: Postman, Newman, Swagger Petstore (демо-окружение)  
Окружение: https://petstore.swagger.io/

Успешные результаты
CRUD для питомцев: создать, получить, обновить, удалить —  работает 
CRUD для заказов: создать, получить, удалить — работает.
создать пользователя, получить, обновить, удалить, логин с корректными данными, логаут — работает

Проваленные результаты
Store / Создать заказ с id = -1
ОР: 400/500
ФР: 200
Баг: нет валидации отрицательных ID.
User / Создать пользователя без пароля
ОР: 400/405
ФР: 200
Баг: отсутствует проверка обязательного поля.
User / Логин с неверным паролем
ОР: 400/401
ФР: 200
Баг: пароль не проверяется.

Наблюдения:
API не валидирует обязательные поля (например, имя питомца, пароль пользователя).
Отсутствуют ограничения по длине строковых полей (можно передать очень длинные значения).
Авторизация реализована некорректно: сервер позволяет логиниться с любыми данными.
CRUD-операции в позитивных сценариях работают нестабильно в особенности метод Delete (может дважды удалять данные).
Возможны нестабильности демо-сервера (иногда встречаются ошибки 500).

Риски
Стенд общий, поэтому тестовые данные могут перезаписываться другими пользователями.
Есть расхождения между документацией Swagger и фактическим поведением API.

Автотесты
Критичные сценарии (CRUD для pet, store, user) я покрыла автотестами прямо в Postman.
Проверяю статус-коды, структуру ответа и корректность id/username.
Прогнать их можно в Postman Runner или через Newman:
newman run "Petstore API.postman_collection.json" -e "Environment Petstore.postman_environment.json"

Итог
Базовая логика API работает, основные риски связаны с нестабильностью стенда и качеством данных.
